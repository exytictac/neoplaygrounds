 -- This is the gui for handling languagesgui[1] = {}gui[1]["text"] = guiCreateLabel ( (sw / 2) - (250 * wp), sh * 0.7, 500 * wp, 100 * wp, "", false )guiLabelSetHorizontalAlign(gui[1]["text"], "center")guiLabelSetVerticalAlign(gui[1]["text"], "center" )guiSetFont ( gui[1]["text"], guiCreateFont("FortuneCity.ttf", 50) )guiLabelSetColor (gui[1]["text"], 0, 0, 0)guiSetVisible(gui[1]['text'], false)-- WHEN BUTTON MOUSE OVERlocal function enterEvent(source,i)	if guiGetAlpha ( source ) < 0.75 or not guiGetEnabled ( source ) then		return	end	Animation.createAndPlay(source,		Animation.presets.guiMoveResize(			(sw / 2) + (i * (iconWidth * 1.25 * wp)) - (iconWidth * 0.875),			(sh / 2) - (iconHeight * 0.875),			iconWidth * 1.75,			iconHeight * 1.75,			100		)	)	guiSetText ( gui[1]["text"], langFlags[i][1] )end-- WHEN BUTTON MOUSE OFFlocal function leaveEvent(source,i)	if guiGetAlpha ( source ) < 0.75 or not guiGetEnabled ( source ) then		return	end	Animation.createAndPlay(source,		Animation.presets.guiMoveResize(			(sw / 2) + (i * (iconWidth * 1.25 * wp)) - (iconWidth / 2),			(sh / 2) - (iconHeight / 2),			iconWidth,			iconHeight,			100		)	)	guiSetText ( gui[1]["text"], "" )end-- ONCLICK ANIMATIONlocal function clickAnimation(button, i)		Animation.createAndPlay(button,		Animation.presets.guiMoveResize(			(sw / 2) - iconWidth,			(sh / 2) - iconHeight,			iconWidth * 2.5,			iconHeight * 2.5,			250		)	)		setTimer(		function()			guiSetPosition(button, (sw/2) - iconWidth, (sh/2) - iconHeight,false)			guiSetSize(button, iconWidth*2.5, iconHeight*2.5, false)		end	, 250, 1)		setElementData ( player, "language", langFlags[i][3], true )	Animation.createAndPlay(button, Animation.presets.guiFadeOut(900) )	setTimer(guiSetVisible, 750, 1, button, false)	guiSetVisible(gui[1].text, false)	showRulesWindow()endlocal frame = 0function moveLanguageCamera( )	if frame <= 250 then		local a, b, c, d, e, f = getCameraMatrix()		setCameraMatrix(a - 0.03, b - 0.3150, c - 0.05, d, e, f+0.01)		frame = frame + 1		return	end		frame = nil	removeEventHandler("onClientRender", root, moveLanguageCamera)endfunction languageMenuShow()	showCenterStrip()	guiSetVisible ( gui[1]["text"], true )	for i = -2, 2 do 		guiSetVisible(gui[1]['button'..i], true)		Animation.createAndPlay ( gui[1]["button"..i], Animation.presets.guiFadeIn ( 1500 ) ) 	end	setCameraMatrix( 12.879754066467, -130.16979980469, 14.660760879517, 3.9294919967651, -228.72940063477, 0.31169033050537, 0, 70 )	addEventHandler("onClientRender", root, moveLanguageCamera)end-- WHEN BUTTON CLICKEDlocal function clickEvent(source, i)	if guiGetAlpha ( source ) < 0.75 or not guiGetEnabled(source) then		return	end	guiSetEnabled ( source, false )	guiSetText ( gui[1]["text"], "" )		for v = -2, 2 do		Animation.createAndPlay( gui[1]["button"..v],			Animation.presets.guiMoveResize(				(sw / 2) + (i * (iconWidth * 1.25 * wp)),				(sh / 2),				0,				0,				250			)		)		setTimer(guiSetVisible, 250, 1, gui[1]["button"..v], false)	end	setTimer(clickAnimation, 500, 1, source, i)end-- INITIALISATIONfor i = -2, 2 do	gui[1]["button"..i] = guiCreateStaticImage(		(sw / 2) + (i * (iconWidth * 1.25 * wp)) - (iconWidth / 2),		(sh / 2) - (iconHeight / 2),		iconWidth, iconHeight,		"images/icons/"..langFlags[i][1]:lower ( )..".png", 		false	)	local button = gui[1]["button"..i]	guiSetAlpha ( button, 0 )	guiSetVisible(button, false)	addEventHandler ( "onClientMouseEnter", button, function() enterEvent(source,i) end, false)	addEventHandler ( "onClientMouseLeave", button, function() leaveEvent(source,i) end, false )	addEventHandler ( "onClientGUIClick", button, function() clickEvent(source,i) end, false)end